<?php

namespace app\admin\controller;

use app\admin\model\Article as ArticleModel;
use app\admin\model\Brand as BrandModel;
use app\admin\model\Cate as CateModel;
use think\Controller;
use think\Request;
use catetree\Catetree;

class Article extends Controller
{


    //初始化方法，这里解决跨域问题
    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //配置跨域请求
        header('Access-Control-Allow-Origin: *');
        header('Access-Control-Allow-Methods: POST, GET, PUT, OPTIONS, DELETE'); //请求方法
        header('Access-Control-Allow-Headers: Origin, X-Requested-With, Control-Type, Content-Type, token, Accept, x-access-sign, x-access-time');
        if (request()->isOptions()) {
            exit();
        }
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        //
    }

    //处理base64码
    function base64_upload($base64)
    {
        $base64_image = str_replace(' ', '+', $base64);
        //post的数据里面，加号会被替换为空格，须要从新替换回来，若是 不是post的数据，则注释掉这一行
        if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $base64_image, $result)) {
            //匹配成功
            if ($result[2] == 'jpeg') {
                $image_name = uniqid() . '.jpg';
                //纯粹是看jpeg不爽才替换的
            } else {
                $image_name = uniqid() . '.' . $result[2];
            }
            //服务器文件存储路径
            $image_file = "static/uploads/imgt/{$image_name}";
            if (file_put_contents($image_file, base64_decode(str_replace($result[1], '', $base64_image)))) {
                return 'static/uploads/imgt/' . $image_name;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        $cate = new Catetree();
        //判断是否是post请求
        if (request()->isPost()) {
            $data = input('post.');
            //判断用户是否输入了协议前缀
            if ($data['link_url'] && stripos($data['link_url'], 'http://') === false) {
                $data['link_url'] = 'http://' . $data['link_url'];
            }
//            return json($data);
            //处理图片上传
            if ($_FILES['thumb']['tmp_name']) {
                //查询图片地址
                $old_links = ArticleModel::field('thumb')->find($data['id']);
                //拼接图片完整地址,IMG_UPLOADS是入口文件定义的自定义系统变量
                $oldlinkImg = IMG_UPLOADS . $old_links['thumb'];
                //判断文件是否存在
                if (file_exists($oldlinkImg)) {
                    @unlink($oldlinkImg);//删除图片,加@是有的无logo
                }
                $data['thumb'] = $this->upload();//把图片地址返回到数值中
            }
            //验证
            $validate = validate('Article');
            if (!$validate->check($data)) {
                $this->error($validate->getError());
            }

            //使用DB方式插入数据
            $save = db('article')->where('id', '=', $id)->update($data);
            if ($save !== false) {
                $this->success('修改文章成功', 'lst');
            } else {
                $this->error('修改文章失败');
            }
            return;
        }
        $cateRes = \app\admin\model\Cate::order('sort asc')->select();
        $cateRes = $cate->catetree($cateRes);
//        return json($cateRes);
        //查询值
        $data = ArticleModel::find($id);
        $this->assign([
            'title' => '文章编辑',
            'data' => $data,
            'cateRes' => $cateRes,
        ]);
        return $this->fetch();
    }


    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function add()
    {
        $cate = new Catetree();
        if (request()->isPost()) {
            $data = input('post.');
            //return json($_REQUEST);
            $data['create_time'] = time();
//            return json($data);
            //判断用户是否输入了协议前缀
            if ($data['link_url'] && stripos($data['link_url'], 'http://') === false) {
                $data['link_url'] = 'http://' . $data['link_url'];
            }
            //处理图片上传
            if ($_FILES['thumb']['tmp_name']) {
                $data['thumb'] = $this->upload();//把图片地址返回到数值中
            }
            //验证
            $validate = validate('article');
            if (!$validate->check($data)) {
                $this->error($validate->getError());
            }

            //插入数据
            $add = ArticleModel::insert($data);
            if ($add) {
                $this->success('添加文章成功', 'lst');
            } else {
                $this->error('添加文章失败');
            }
        }
        $cateRes = \app\admin\model\Cate::order('sort asc')->select();
        $cateRes = $cate->catetree($cateRes);
        $this->assign([
            'title' => '文章添加',
            'cateRes' => $cateRes,
        ]);
        return $this->fetch();
    }

    //上传图片
    public function upload()
    {
        // 获取表单上传文件 例如上传了001.jpg
        $file = request()->file('thumb');
        // 移动到框架应用根目录/uploads/ 目录下
        $info = $file->move('../public/static/uploads');
        if ($info) {
            // 成功上传后 获取上传信息
            return $info->getSaveName();
        } else {
            // 上传失败获取错误信息
            return $file->getError();
        }
    }


    /*
     * 文章列表
     * */
    //文章列表
    public function lst()
    {
        $data = ArticleModel::field('a.*,c.cate_name')->alias('a')->join('category c', 'cate_id=c.id')->order('a.id a.desc')->paginate(10);
        $this->assign([
            'title' => '文章列表',
            'articles' => $data
        ]);
        return $this->fetch('list');
    }

    /**
     * 保存新建的资源
     *
     * @param \think\Request $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        //
    }

    /**
     * 显示指定的资源
     *
     * @param int $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }


    /**
     * 保存更新的资源
     *
     * @param \think\Request $request
     * @param int $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param int $id
     * @return \think\Response
     */
    public function delete($id)
    {
        if ($id != null) {
            //查询图片地址
            $old_links = ArticleModel::field('thumb')->find($id);
            //拼接图片完整地址,IMG_UPLOADS是入口文件定义的自定义系统变量
            $oldlinkImg = IMG_UPLOADS . $old_links['thumb'];
            //判断文件是否存在
            if (file_exists($oldlinkImg)) {
                @unlink($oldlinkImg);//删除图片,加@是有的无logo
            }
            $result = ArticleModel::where('id', '=', $id)->delete();
            if ($result) {
                $this->success('删除文章成功', 'lst');
            } else {
                $this->error('删除文章失败');
            }
        } else {
            $this->error('删除文章不能为空');
        }
    }

    /*
     * ueditor图片管理
     * */
    public function ImgList()
    {
        $this->assign([
            'title' => '图片管理'
        ]);
        return $this->fetch('imglist');
    }
}
